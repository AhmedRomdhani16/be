apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        
      labels:
        io.kompose.service: back-end
      name: back-end
    spec:
      ports:
        - name: "8089"
          port: 8089
          targetPort: 8080
      selector:
        io.kompose.service: back-end
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        
      labels:
        io.kompose.service: front-end
      name: front-end
    spec:
      ports:
        - name: "4210"
          port: 4200
          targetPort: 4200
      selector:
        io.kompose.service: front-end
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        
      labels:
        io.kompose.service: mysql-db
      name: mysql-db
    spec:
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: mysql-db
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        
      labels:
        io.kompose.service: php-my-admin
      name: php-my-admin
    spec:
      ports:
        - name: "8081"
          port: 8081
          targetPort: 80
      selector:
        io.kompose.service: php-my-admin
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        
      labels:
        io.kompose.service: back-end
      name: back-end
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: back-end
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yaml -o kubemanifests.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: back-end
        spec:
          containers:
            - env:
                - name: MYSQL_DATABASE
                  value: crud-application
                - name: MYSQL_HOST
                  value: mysql-db
                - name: MYSQL_PASSWORD
                  value: password
                - name: MYSQL_USER
                  value: root
              image: ahmed991/firstrepo:docker-whale
              name: springboot-app
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        
      labels:
        io.kompose.service: front-end
      name: front-end
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: front-end
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yaml -o kubemanifests.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: front-end
        spec:
          containers:
            - image: ahmed991/firstrepo:docker-angular1
              name: angular
              ports:
                - containerPort: 4200
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        
      labels:
        io.kompose.service: mysql-db
      name: mysql-db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mysql-db
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yaml -o kubemanifests.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: mysql-db
        spec:
          containers:
            - env:
                - name: MYSQL_DATABASE
                  value: crud-application
                - name: MYSQL_ROOT_PASSWORD
                  value: password
              image: mysql
              name: mysql-db
              ports:
                - containerPort: 3306
              resources: {}
              volumeMounts:
                - mountPath: /docker-entrypoint-initdb.d/dump.sql
                  name: mysql-db-claim0
          restartPolicy: Always
          volumes:
            - name: mysql-db-claim0
              persistentVolumeClaim:
                claimName: mysql-db-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mysql-db-claim0
      name: mysql-db-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        
      labels:
        io.kompose.service: php-my-admin
      name: php-my-admin
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: php-my-admin
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yaml -o kubemanifests.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: php-my-admin
        spec:
          containers:
            - image: phpmyadmin
              name: php-my-admin
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}
